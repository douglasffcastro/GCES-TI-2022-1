name: CI/CD Library

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Docker Compose up
        run: docker compose up -d

  test-back:
  
    runs-on: ubuntu-latest
    
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost # default host value for the database
      POSTGRES_DB: djtesting
      POSTGRES_PORT: 5432
      DJANGO_SECRET_KEY: test-key-not-good
      
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
          
    strategy:
      matrix:
        python-version: ["3.8"]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r library_back/requirements.txt
      - name: Run Tests
        env:
          DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DB_USERNAME: ${{ env.POSTGRES_USER }}
          DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DB_HOST: ${{ env.POSTGRES_HOST }}
          DB_DATABASE: ${{ env.POSTGRES_DB }}
          DB_PORT: ${{ env.POSTGRES_PORT }}
        run: |
          python library_back/manage.py test
    
  test-front:
  
    runs-on: ubuntu-latest

    container: node:14-alpine

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Packages npm
        run: |
          cd library_front
          npm install
      - name: Run tests
        run: |
          cd library_front
          npm test
  
  lint:
    runs-on: ubuntu-latest

    container: node:14-alpine

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Packages npm
        run: |
          cd library_front
          npm install
      - name: Run lint
        run: |
          cd library_front
          npm run lint src/
